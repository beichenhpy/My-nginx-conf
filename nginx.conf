
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    include /usr/local/nginx/conf.d/*.conf;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    #访问限制
    limit_req_zone  $binary_remote_addr  zone=mylimit:10m  rate=1r/s;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
	#禁止ip访问
	server { 
	   listen 80 default;
	   server_name _;
	   return 403;
	 }
    #gzip  on;
    server {
        listen       80;
        server_name  cname;
	    charset utf-8;
        location / {
            root   /usr/local/nginx/app/index;
            index  index.html index.htm;
            expires 7d;
        }
        location /xxx {
            autoindex on;
            root /opt/;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    server {
         listen       80;
	     server_name  cname;
	     charset utf-8;
		location / {
		 return 301  https://www.baidu.com/;
		}
      }
    server {
			listen      80;
			server_name   cname;
			charset utf-8;
			location / {
			          proxy_set_header   X-Real-IP $remote_addr;
                      limit_req zone=mylimit burst=1 nodelay;
                      # 这里可以获取到真实ip
					  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
					  proxy_set_header   Host      $http_host;
					  proxy_http_version 1.1;
					  proxy_set_header Upgrade $http_upgrade;
					  proxy_set_header Connection "upgrade";
					  proxy_pass         http://0.0.0.0:port/xxx/;	
			}
		
	}
	
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
